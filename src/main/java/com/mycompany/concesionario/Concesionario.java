package com.mycompany.concesionario;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.Objects;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author arjun
 */
public class Concesionario extends javax.swing.JFrame {

    //global variables
    private String file = "";
    public String Color = "";
    private BufferedImage myPicture;

    public Concesionario() {
        initComponents();
        extraComponents();

    }

    private void extraComponents() {

        fecha.setText(date());
        jLabel8.setIcon(new ImageIcon("IMG\\mainCar.png"));
        //carModels();
        marcaCoches.addActionListener((ActionEvent e) -> {

            modelosCoches.removeAllItems();
            String[] str = carModels();
            modelosCoches.addItem(str[0]);
            modelosCoches.addItem(str[1]);
            modelosCoches.addItem(str[2]);
            if (marcaCoches.getSelectedIndex() == 0) {
                modelosCoches.removeAllItems();
            }
        });

//        try{
//             myPicture = ImageIO.read(new File("\\IMG\\background.png"));
//            
//        }catch(IOException e){
//            System.out.println("error : "+e);
//        }
//         
//    }
//    protected void paintComponent(Graphics g) {
//        super.paintComponents(g);
//        g.drawImage(myPicture, 0, 0, this); // see javadoc for more info on the parameters            
    }

    private String[] carModels() {
        String[] arrCarModels = new String[]{"", "", ""};
        File folder = new File("Coches");
        String[] filenames = folder.list();
        int file_Number = filenames.length;
        //System.out.println(Arrays.toString(filenames));
        String carname = marcaCoches.getSelectedItem().toString();
        for (int i = 0; i < file_Number; i++) {
            String name = Objects.requireNonNull(filenames)[i].substring(filenames[i].lastIndexOf("\\") + 1, filenames[i].length() - 4);
            if (name.equalsIgnoreCase(carname)) {
                file = name;
            }
        }
//        System.out.println(file);
        String fileDate = "";

        try {
            File openfile = new File("Coches\\" + file + ".txt");
            Scanner lectura = new Scanner(openfile);
            while (lectura.hasNextLine()) {
                fileDate += lectura.nextLine();
            }
            String[] arrdata = fileDate.split("ñ");//it splits different vars with its data

            for (int i = 0; i < arrCarModels.length; i++) {
                int index = arrdata[i].indexOf(";");//it split's data of the chaar model 
                String string = arrdata[i].substring(0, index);
                arrCarModels[i] += string;

            }

        } catch (FileNotFoundException e) {
            System.out.println("error : " + e);
        }
        return arrCarModels;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        btnContrato = new javax.swing.JButton();
        btnCaracterísticas = new javax.swing.JButton();
        fecha = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        marcaCoches = new javax.swing.JComboBox<>();
        modelosCoches = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Concessionario");
        setLocation(new java.awt.Point(0, 0));

        jDesktopPane1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(238, 236, 218));
        jPanel1.setMinimumSize(new java.awt.Dimension(906, 646));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Año");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Marca");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("Modelo");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setText("Color");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setText("Combustible");

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField4.setPreferredSize(new java.awt.Dimension(120, 32));

        jTextField5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jComboBox1.setBackground(new java.awt.Color(238, 236, 218));
        jComboBox1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gasolina", "Diesel", "Híbrido", "Eléctrico" }));
        jComboBox1.setSelectedIndex(0);
        jComboBox1.setMinimumSize(new java.awt.Dimension(120, 32));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton1.setText("Añadir");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(238, 236, 218));
        jTable1.setForeground(new java.awt.Color(238, 236, 218));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Año", "Combustible", "Color", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBackground(new java.awt.Color(238, 236, 218));
        jTable2.setForeground(new java.awt.Color(238, 236, 218));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Año", "Combustible", "Precio", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton2.setText("Leer");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnContrato.setBackground(new java.awt.Color(153, 153, 255));
        btnContrato.setText("Contrato");
        btnContrato.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContratoActionPerformed(evt);
            }
        });

        btnCaracterísticas.setBackground(new java.awt.Color(153, 153, 255));
        btnCaracterísticas.setText("Características");
        btnCaracterísticas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCaracterísticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaracterísticasActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(204, 255, 204));
        jLabel8.setForeground(new java.awt.Color(204, 255, 204));

        marcaCoches.setBackground(new java.awt.Color(238, 236, 218));
        marcaCoches.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        marcaCoches.setForeground(new java.awt.Color(51, 51, 51));
        marcaCoches.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","Audi", "Bmw", "Seat", "Tesla","Nissan"}));
        marcaCoches.setSelectedIndex(0);
        marcaCoches.setMinimumSize(new java.awt.Dimension(120, 32));
        marcaCoches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcaCochesActionPerformed(evt);
            }
        });

        modelosCoches.setBackground(new java.awt.Color(238, 236, 218));
        modelosCoches.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        modelosCoches.setForeground(new java.awt.Color(51, 51, 51));
        modelosCoches.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        modelosCoches.setSelectedIndex(0);
        modelosCoches.setMinimumSize(new java.awt.Dimension(120, 32));
        modelosCoches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelosCochesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fecha, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                        .addGap(573, 573, 573))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(modelosCoches, javax.swing.GroupLayout.Alignment.LEADING, 0, 120, Short.MAX_VALUE)
                            .addComponent(marcaCoches, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                        .addGap(396, 396, 396))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCaracterísticas, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(marcaCoches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(modelosCoches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel1))
                                    .addGap(14, 14, 14)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(9, 9, 9)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(59, 59, 59)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(7, 7, 7))))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCaracterísticas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void modelosCochesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelosCochesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_modelosCochesActionPerformed

    private void marcaCochesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcaCochesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marcaCochesActionPerformed

    private void btnCaracterísticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaracterísticasActionPerformed

        if (marcaCoches.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Marca de Coche no ha Selecionado!", "Campo no seleccionado", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                /**
                 * if (jTextField2.getText().isEmpty()) {
                 * JOptionPane.showMessageDialog(null, "El campo Marca es
                 * vacio!!!", "ERROR", JOptionPane.ERROR_MESSAGE); } else {*
                 */
                //open folder coches and get file name/select file to open for data extraction
                File folder = new File("Coches");
                String[] filenames = folder.list();
                int file_Number = filenames.length;
                //System.out.println(Arrays.toString(filenames));
                String carname = marcaCoches.getSelectedItem().toString();
                for (int i = 0; i < file_Number; i++) {
                    String name = Objects.requireNonNull(filenames)[i].substring(filenames[i].lastIndexOf("\\") + 1, filenames[i].length() - 4);
                    if (name.equalsIgnoreCase(carname)) {
                        file = name;
                    }
                }
                //                System.out.println(file);
                String fileData = "";
                File openfile = new File("Coches\\" + file + ".txt");
                Scanner lectura = new Scanner(openfile);
                while (lectura.hasNext()) {
                    fileData += lectura.nextLine();
                }
                //                System.out.println(fileData);

                //                List<String> CarModelData = new ArrayList<>();
                //                 String[] arr;
                //                 String[] arr1;// = new String[]{"","","","","","","","",""};
                //-----------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<left whole part
                //                 arr = fileData.split("ñ");
                String model = "";
                List<String> CarModel = Arrays.asList(fileData.split("ñ"));
                //                System.out.println(CarModel.size());

                String Nombre = "";
                String Tipo = "";

                String Año = "";
                String Velocidad = "";
                String Motor = "";
                String Puertas = "";
                String Marca = "";
                String Desc = "";
                for (int i = 0; i < CarModel.size(); i++) {
                    int selectedOption = modelosCoches.getSelectedIndex();
                    //                    System.out.println(selectedOption);
                    List<String> CarModelData = Arrays.asList(CarModel.get(selectedOption).split(";"));
                    //                    System.out.println(CarModelData.size());
                    Nombre = CarModelData.get(0);
                    Tipo = CarModelData.get(1);
                    Velocidad = CarModelData.get(2);
                    Color = CarModelData.get(3);
                    Año = CarModelData.get(4);
                    Motor = CarModelData.get(5);
                    Puertas = CarModelData.get(6);
                    Marca = CarModelData.get(7);
                    Desc = CarModelData.get(8);
                    jTextField5.setText("");
                    jTextField5.setText(Color);
                    jTextField1.setText("");
                    jTextField1.setText(Año);
                }

                Características f2 = new Características();
                f2.insertData(Nombre, Tipo, Velocidad, Color, Año, Motor, Puertas, Marca, Desc);
                f2.setVisible(true);
                f2.setDefaultCloseOperation(HIDE_ON_CLOSE);
                lectura.close();

                //                for (int i = 0; i < CarModel.size(); i++) {
                //                    System.out.println(CarModel.get(i));
                //                    int index = CarModel.get(i).indexOf(';');
                //                    model = CarModel.get(i).substring(0, index);
                //                    System.out.println(model);
                //
                //                }
                //                if (modelosCoches.getSelectedIndex().equalsIgnoreCase(model)) {
                //                    for (int i = 0; i <= 9; i++) {
                //                        CarModelData = Arrays.asList();
                //                        String[] arr = CarModel.get(i).split(";");
                //                        System.out.println(arr[i]);
                //                        String Nombre = arr[0];
                //                        String Tipo = arr[1];
                //                        String Velocidad = arr[2];
                //                        String Color = arr[3];
                //                        String Año = arr[4];
                //                        String Motor =arr[5];
                //                        String Puertas =arr[6];
                //                        String Marca = arr[7];
                //                        String Desc = arr[8];
                ////                        String Nombre = CarModelData.get(0);
                ////                        String Tipo = CarModelData.get(1);
                ////                        String Velocidad = CarModelData.get(2);
                ////                        String Color = CarModelData.get(3);
                ////                        String Año = CarModelData.get(4);
                ////                        String Motor = CarModelData.get(5);
                ////                        String Puertas = CarModelData.get(6);
                ////                        String Marca = CarModelData.get(7);
                ////                        String Desc = CarModelData.get(8);
                //                        Características f2 = new Características();
                //                        f2.insertData(Nombre, Tipo, Velocidad, Color, Año, Motor, Puertas, Marca, Desc);
                //                        f2.setVisible(true);
                //                        f2.setDefaultCloseOperation(HIDE_ON_CLOSE);
                //                        lectura.close();
                //                    }
                //
                //                } else {
                //                    JOptionPane.showMessageDialog(null, "Este coche no existe en el sistema!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                //                }
                //                 for (int i = 0; i < CarModel.size(); i++) {
                //                     String str = arr[i];
                //                    CarModel.add(new String[]{str});
                //
                //                }
                //                 for (int i = 0; i < CarModelData.size(); i++) {
                //                    Object object = CarModelData[i];
                //
                //                }
                //                 for (int i = 0; i < 3; i++) {
                //                     System.out.println(Arrays.toString(CarModel.get(i))+" \n");
                //
                //                }
                //
            } catch (Exception e) {
                System.out.println("Error: " + e);
            }
        }
        //System.out.println("fine till here");
        //getModelosCoches();
    }//GEN-LAST:event_btnCaracterísticasActionPerformed

    private void btnContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContratoActionPerformed
        // TODO add your handling code here:
        Contrato f1 = new Contrato();
        f1.setVisible(true);
        f1.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_btnContratoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            int i = jTable2.getSelectedRow();
            System.out.println(i);
            Object[] fila = new Object[]{jTable2.getValueAt(i, 0), jTable2.getValueAt(i, 1), jTable2.getValueAt(i, 2), jTable2.getValueAt(i, 3), jTable2.getValueAt(i, 4), jTable2.getValueAt(i, 5)};
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(fila);

        } catch (Exception e) {

            if (jTable2.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No Dato Disponible!!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Porfavor selecione un campos!!!", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jTextField1.getText().isEmpty()
                || jTextField5.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Porfavor Rellenes todos los campos!!!", "Campos Sin Datos", JOptionPane.ERROR_MESSAGE);

        } else {
            if (jTextField4.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Porfavor introduce el precio del coche!", "Campo Sin Datos", JOptionPane.ERROR_MESSAGE);
            } else {
                
//                if (jTextField4.getText().contains("\\d+\\.?\\d*")) {
                    try {
                        String path = "CochesVendido\\" + genSerialNum();
                        File createFile = new File(path);
                        FileWriter newfileData = new FileWriter(createFile);
                        try ( BufferedWriter writer = new BufferedWriter(newfileData)) {
                            writer.write(jTextField1.getText() + " " + marcaCoches.getSelectedItem().toString() + " " + modelosCoches.getSelectedItem().toString() + " " + jTextField4.getText() + " " + jTextField5.getText() + " " + jComboBox1.getSelectedItem());

                        }
                        //writer.write(jTextField1.getText()+" "+jTextField2.getText()+""+ jTextField3.getText()+" "+ dinero+" "+ jTextField5.getText()+" "+ jComboBox1.getSelectedItem());

                        createFile.deleteOnExit();//elimina los archivos al cerrar la applicacion
                    } catch (IOException e) {
                        System.out.println("error:" + e);
                    }
                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                    float dinero = Float.parseFloat(jTextField4.getText());

                    Object[] newRow = new Object[]{jTextField1.getText(), marcaCoches.getSelectedItem().toString(), modelosCoches.getSelectedItem().toString(), dinero, jTextField5.getText(), jComboBox1.getSelectedItem()};
                    // creacion del objecto row
                    // comparar el objeto row con los objetos en la tabla para evitar introducir un objeto que ya existe
                    int i = 0;
                    boolean excepcion = false;
                    // compara la nueva fila con todas las filas existentes
                    while (i < jTable2.getRowCount() && !excepcion) {
                        float dinero2 = (float) (jTable2.getValueAt(i, 3));
                        Object[] fila = new Object[]{jTable2.getValueAt(i, 0),
                            jTable2.getValueAt(i, 1),
                            jTable2.getValueAt(i, 2),
                            dinero2,
                            jTable2.getValueAt(i, 3),
                            jTable2.getValueAt(i, 4),
                            jTable2.getValueAt(i, 5)};
                        if (jTable2.getValueAt(i, 0).toString().equals(newRow[0].toString())
                                && jTable2.getValueAt(i, 1).toString().equals(newRow[1].toString())
                                && jTable2.getValueAt(i, 2).toString().equals(newRow[2].toString())
                                && jTable2.getValueAt(i, 3).toString().equals(newRow[3].toString())
                                && jTable2.getValueAt(i, 4).toString().equals(newRow[4].toString())
                                && jTable2.getValueAt(i, 5).toString().equals(newRow[5].toString())) {
                            excepcion = true;
                        }
                        ++i;
                    }
                    if (excepcion) {
                        JOptionPane.showMessageDialog(null, "Estas introduciendo un coche que ya existe en la base de datos");
                    } else {
                        model.addRow(newRow);
                        jTextField1.setText("");
                        jTextField5.setText("");
                        jTextField4.setText("");
                    }
//                } else {
//                    JOptionPane.showMessageDialog(null, "Porfavor introduce el precio del coche!", "Campo Sin Datos", JOptionPane.ERROR_MESSAGE);
//                        jTextField4.setText("");
//                }
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public static String date() {
        DateTimeFormatter d = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate now = LocalDate.now();
        return d.format(now);
    }

    private String genSerialNum() {
        String serialNum;
        String date = dateSerialNum();
        serialNum = date + (int) (Math.floor(Math.random() * 100000)) + ".txt";
        return serialNum;
    }

    public static String dateSerialNum() {
        DateTimeFormatter d = DateTimeFormatter.ofPattern("ddMMyyyy");
        LocalDate now = LocalDate.now();
        return d.format(now);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Concesionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Concesionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Concesionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Concesionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Concesionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCaracterísticas;
    private javax.swing.JButton btnContrato;
    private javax.swing.JLabel fecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JComboBox<String> marcaCoches;
    private javax.swing.JComboBox<String> modelosCoches;
    // End of variables declaration//GEN-END:variables
}
